# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Provides MongoDb connector
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "uk.gov.hmrc.apiplatformevents.wiring.ClockModule"

play.http.filters = "uk.gov.hmrc.apiplatformevents.wiring.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Additional modules
play.modules.enabled += "uk.gov.hmrc.apiplatformevents.wiring.SchedulerModule"


appName = "api-platform-events"
play.http.router = prod.Routes

controllers {
  uk.gov.hmrc.apiplatformeventswithmongodb.controllers.ApiPlatformEventsWithMongodbController {
    needsAuditing = false
    needsLogging = true
  }
}


microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }

  services {
    email {
      host = localhost
      port = 8300
    }

    third-party-application {
      host = localhost
      port = 9607
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = false
  traceRequests = false
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

mongodb {
  uri = "mongodb://localhost:27017/api-platform-events"

  failoverStrategy {
    initialDelayMsecs = 100
    retries = 10
    delay {
      factor = 1.25
      function = fibonacci
    }
  }
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}


schedules {

  SendEventNotificationsJob {
    description = "send notifications to application admins when PPNS callback uri is changed"
    expression = "0_*/5_*_?_*_*_*" # expression every 5 minutes
    enabled = false
    mongoLockTimeout = 20seconds
  }

 }